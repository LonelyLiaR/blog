{"version":3,"sources":["store/reducers.js","store/actions.js","store/index.js","App.jsx","registerServiceWorker.js","index.js"],"names":["$_NO_LABEL_","Symbol","combineReducers","ownUserInfo","state","arguments","length","undefined","avatar_url","nickname","desc","action","type","Object","assign","info","postsStore","posts","number","$body","body","labelsStore","labels","values","i","ls","l","name","push","createStore","Reducers","HomePage","React","lazy","Promise","all","__webpack_require__","e","then","bind","ArchivesPage","LabelsPage","LabelPage","PostPage","ErrorPage","react_default","a","createElement","HashRouter","es","store","$tore","Suspense","fallback","Switch","Route","exact","path","component","props","Redirect","from","to","PureComponent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","GlobalStyle","createGlobalStyle","_templateObject","render","Fragment","App_default","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d6eccd61.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { STORE_INFO, STORE_POSTS, MARK_POST } from \"./actions\";\r\n\r\nconst $_NO_LABEL_ = Symbol(\"$_NO_LABEL_\");\r\n\r\nconst ownUserInfo = (\r\n  state = { avatar_url: \"\", nickname: \"\", desc: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case STORE_INFO:\r\n      return Object.assign({}, state, action.info);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst postsStore = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STORE_POSTS:\r\n      return Object.assign({}, state, action.posts);\r\n    case MARK_POST:\r\n      state[action.number].$body = action.body;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst labelsStore = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STORE_POSTS:\r\n      const labels = Object.assign({}, state);\r\n      labels[$_NO_LABEL_] = [];\r\n      const posts = Object.values(action.posts);\r\n      for (let i = 0; i < posts.length; i++) {\r\n        const ls = posts[i].labels;\r\n        if (!!ls.length) {\r\n          for (let l = 0; l < ls.length; l++) {\r\n            if (typeof labels[ls[l].name] === \"undefined\") {\r\n              labels[ls[l].name] = [];\r\n            }\r\n            labels[ls[l].name].push(posts[i]);\r\n          }\r\n        } else {\r\n          labels[$_NO_LABEL_].push(posts[i]);\r\n        }\r\n      }\r\n      return labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  ownUserInfo,\r\n  postsStore,\r\n  labelsStore\r\n});\r\n","export const STORE_INFO = \"store-info\";\r\nexport const STORE_POSTS = \"store-posts\";\r\nexport const MARK_POST = \"mark-post\";","import {createStore} from 'redux';\r\nimport Reducers from './reducers';\r\n\r\nexport default createStore(Reducers);","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport $tore from \"./store\";\r\n// import AsyncComponent from \"components/common/AsyncComponent\";\r\n\r\nconst HomePage = React.lazy(() => import(\"./components/HomePage\"));\r\nconst ArchivesPage = React.lazy(() => import(\"./components/ArchivesPage\"));\r\nconst LabelsPage = React.lazy(() => import(\"./components/LabelsPage\"));\r\nconst LabelPage = React.lazy(() => import(\"./components/LabelPage\"));\r\nconst PostPage = React.lazy(() => import(\"./components/PostPage\"));\r\nconst ErrorPage = React.lazy(() => import(\"./components/ErrorPage\"));\r\n\r\nexport default class extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Provider store={$tore}>\r\n          <React.Suspense fallback={\"\"}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={() => <HomePage />} />\r\n              <Route path=\"/archives\" component={() => <ArchivesPage />} />\r\n              <Route path=\"/labels\" component={() => <LabelsPage />} />\r\n              <Route\r\n                path=\"/label/:labelName\"\r\n                component={props => <LabelPage {...props} />}\r\n              />\r\n              <Route\r\n                path=\"/p/:number\"\r\n                component={props => <PostPage {...props} />}\r\n              />\r\n              <Route path=\"/error\" component={() => <ErrorPage />} />\r\n              <Redirect from=\"/*\" to=\"/error\" />\r\n            </Switch>\r\n          </React.Suspense>\r\n        </Provider>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    outline: none;\r\n  }\r\n\r\n  html,\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n    position: relative;\r\n  }\r\n\r\n  body {\r\n    font-family: PingFang SC, Microsoft Jhenghei, Microsoft YaHei, sans-serif;\r\n    line-height: 1.5;\r\n    color: #333333;\r\n    -webkit-text-size-adjust: none;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  a {\r\n    color: #2DB4D8;\r\n    text-decoration: none;\r\n    transition: color .3s;\r\n  }\r\n\r\n  a:hover {\r\n    color: #22BAD9;\r\n  }\r\n\r\n  #app {\r\n    height: 100%;\r\n    position: relative;\r\n  }\r\n\r\n  .markdown-body {\r\n    font-size: 15px;\r\n    color: #333333;\r\n    line-height: 1.75;\r\n    letter-spacing: 0.1px;\r\n\r\n    h1, h2 {\r\n      font-weight: 500;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, strong {\r\n      color: #24292e;\r\n    }\r\n  }\r\n`;\r\n\r\nrender(\r\n  <>\r\n    <App />\r\n    <GlobalStyle />\r\n  </>,\r\n  document.getElementById(\"app\")\r\n);\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}