{"version":3,"sources":["components/HomePage/Avatar.tsx","components/HomePage/Intro.tsx","components/HomePage/Navbar.tsx","components/HomePage/Footer.tsx","components/HomePage/Loader.tsx","components/HomePage/index.tsx","configs/index.ts","configs/default.ts","components/common/PageContainer.tsx","components/common/PageTitle.tsx","api/fetch.ts","api/config.ts","api/index.ts"],"names":["AvatarBase","Styled","span","Avatar","props","alt","this","src","as","React","PureComponent","Intro","div","Nickname","h1","Desc","p","Navbar","ul","NavItem","li","Footer","document","documentElement","body","clientWidth","clientHeight","memo","width","height","speed","preserveAspectRatio","primaryColor","secondaryColor","x","y","rx","ry","HomePage","PageContainer","Navs","navs","key","to","ARCHIVES_TITLE","LABELS_TITLE","navTitle","SOCIALS_LIST","push","href","connect","state","ownUserInfo","dispatch","storeInfo","info","type","STORE_INFO","avatar_url","nickname","desc","loaded","res","getOwnUserInfo","AVATAR","length","NICKNAME","BIO","bio","setState","PageTitle","Date","getFullYear","USERNAME","configs","customConfigs","Object","assign","REPO","keys","DATE_FORMAT","EMPTY_MESSAGE","ERROR_TITLE","ERROR_MESSAGE","ERROR_NAV","setDefaultConfigs","CustomConfigs","BLOG_TITLE","children","title","options","Axios","create","baseURL","headers","Accept","a","Fetch","url","method","then","data","catch","err","getArchives","getPost","number","markdownParser","text","mode","context"],"mappings":"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","file":"static/js/9.38a68de9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  src: string | undefined;\r\n}\r\n\r\nconst AvatarBase = Styled.span`\r\n    width: 128px;\r\n    height: 128px;\r\n    background-color: #F8F8F8;\r\n    border: 1px solid #F8F8F8;\r\n    border-radius: 100%;\r\n    display: block;\r\n`;\r\n\r\nconst Avatar = (props: IProps) => <img {...props} alt=\"avatar\" />;\r\n\r\nexport default class extends React.PureComponent<IProps> {\r\n  public render() {\r\n    return !!this.props.src ? (\r\n      <AvatarBase as={Avatar} {...this.props} />\r\n    ) : (\r\n      <AvatarBase />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Intro = Styled.div`\r\n    margin-top: 16px;\r\n    text-align: center;\r\n`;\r\n\r\nexport default class extends React.PureComponent {\r\n  public static Nickname = Styled.h1`\r\n        margin: 0;\r\n        padding: 4px 0;\r\n        font-size: 20px;\r\n    `;\r\n  public static Desc = Styled.p`\r\n        margin: 0;\r\n        padding: 4px 0;\r\n        color: #999999;\r\n        font-size: 16px;\r\n    `;\r\n  public render() {\r\n    return <Intro {...this.props} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Navbar = Styled.ul`\r\n    padding: 0;\r\n    margin-top: 16px;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default class extends React.PureComponent {\r\n  public static NavItem = Styled.li`\r\n        padding: 0 6px;\r\n  \r\n        > a {\r\n            font-size: 15px;\r\n        }\r\n    `;\r\n  public render() {\r\n    return <Navbar {...this.props} />;\r\n  }\r\n}\r\n","import Styled from \"styled-components\";\r\n\r\nconst Footer = Styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  font-size: 12px;\r\n  line-height: 32px;\r\n  text-align: center;\r\n  position: absolute;\r\n`;\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst { clientWidth, clientHeight } = document.documentElement || document.body;\r\n\r\nexport default React.memo(() => (\r\n  <ContentLoader\r\n    width={clientWidth}\r\n    height={clientHeight - (clientWidth <= 500 ? 50 : 100)}\r\n    speed={1}\r\n    preserveAspectRatio=\"none\"\r\n    primaryColor={\"#f3f3f3\"}\r\n    secondaryColor={\"#ecebeb\"}\r\n  >\r\n    <>\r\n      <rect\r\n        x={clientWidth / 2 - 72}\r\n        y={clientHeight / 2 - 196}\r\n        rx=\"144\"\r\n        ry=\"144\"\r\n        width=\"144\"\r\n        height=\"144\"\r\n      />\r\n      <rect\r\n        x={clientWidth / 2 - 64}\r\n        y={clientHeight / 2 - 26}\r\n        width=\"128\"\r\n        height=\"22\"\r\n      />\r\n      <rect\r\n        x={clientWidth / 2 - 150}\r\n        y={clientHeight / 2 + 16}\r\n        width=\"300\"\r\n        height=\"18\"\r\n      />\r\n    </>\r\n  </ContentLoader>\r\n));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Styled from \"styled-components\";\r\nimport { getOwnUserInfo } from \"api\";\r\nimport PageContainer from \"components/common/PageContainer\";\r\nimport PageTitle from \"components/common/PageTitle\";\r\nimport Avatar from \"./Avatar\";\r\nimport Intro from \"./Intro\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport HomeLoader from \"./Loader\";\r\nimport { STORE_INFO } from \"store/actions\";\r\nimport {\r\n  USERNAME,\r\n  AVATAR,\r\n  NICKNAME,\r\n  BIO,\r\n  SOCIALS_LIST,\r\n  ARCHIVES_TITLE,\r\n  LABELS_TITLE\r\n} from \"configs\";\r\n\r\ninterface IMapStateToProps {\r\n  ownUserInfo: object;\r\n}\r\n\r\ninterface IMapDispatchToProps {\r\n  storeInfo: (info: IUserInfo) => void;\r\n}\r\n\r\ninterface IUserInfo {\r\n  avatar_url?: string;\r\n  nickname?: string;\r\n  desc?: string;\r\n  [other: string]: any;\r\n}\r\n\r\nconst HomePage = Styled(PageContainer)`\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 0 30px;\r\n  }\r\n`;\r\n\r\nconst Navs = React.memo(() => {\r\n  const navs = [\r\n    <Navbar.NavItem key=\"Archives\">\r\n      <Link to=\"/archives\">{ARCHIVES_TITLE}</Link>\r\n    </Navbar.NavItem>,\r\n    <Navbar.NavItem key=\"Labels\">\r\n      <Link to=\"/labels\">{LABELS_TITLE}</Link>\r\n    </Navbar.NavItem>\r\n  ];\r\n  for (let navTitle in SOCIALS_LIST) {\r\n    navs.push(\r\n      <Navbar.NavItem key={navTitle}>\r\n        <a href={SOCIALS_LIST[navTitle]}>{navTitle}</a>\r\n      </Navbar.NavItem>\r\n    );\r\n  }\r\n  return <Navbar>{navs}</Navbar>;\r\n});\r\n\r\nexport default connect(\r\n  (state: IMapStateToProps) => ({\r\n    ownUserInfo: state.ownUserInfo\r\n  }),\r\n  dispatch => ({\r\n    storeInfo: (info: IUserInfo) => dispatch({ type: STORE_INFO, info })\r\n  })\r\n)(\r\n  class extends React.PureComponent<\r\n    IMapStateToProps & IMapDispatchToProps,\r\n    IUserInfo\r\n  > {\r\n    readonly state = {\r\n      avatar_url: \"\",\r\n      nickname: \"\",\r\n      desc: \"\",\r\n      loaded: false\r\n    };\r\n    public async componentDidMount() {\r\n      let res: IUserInfo = this.props.ownUserInfo;\r\n      let { avatar_url, nickname, desc } = res;\r\n      if (!avatar_url || !nickname || !desc) {\r\n        res = await getOwnUserInfo();\r\n        avatar_url = AVATAR.length > 0 ? AVATAR : res.avatar_url;\r\n        nickname = NICKNAME;\r\n        desc = BIO.length > 0 ? BIO : res.bio;\r\n      }\r\n      this.props.storeInfo({ avatar_url, nickname, desc });\r\n      this.setState({ avatar_url, nickname, desc, loaded: true });\r\n    }\r\n    public render() {\r\n      const { avatar_url, nickname, desc, loaded } = this.state;\r\n      return (\r\n        <HomePage>\r\n          <PageTitle />\r\n          {loaded ? (\r\n            <>\r\n              <Avatar src={avatar_url} />\r\n              <Intro>\r\n                <Intro.Nickname>{nickname}</Intro.Nickname>\r\n                <Intro.Desc>{desc}</Intro.Desc>\r\n              </Intro>\r\n              <Navs />\r\n              <Footer>\r\n                © 2018 - {new Date().getFullYear()} {USERNAME}\r\n              </Footer>\r\n            </>\r\n          ) : (\r\n            <HomeLoader />\r\n          )}\r\n        </HomePage>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import CustomConfigs from \"../custom-configs.json\";\r\nimport setDefaultConfigs from \"./default\";\r\n\r\nconst configs = setDefaultConfigs(CustomConfigs) as IConfigs;\r\n\r\nexport const BLOG_TITLE = configs.BLOG_TITLE;\r\nexport const USERNAME = configs.USERNAME;\r\nexport const REPO = configs.REPO;\r\nexport const AVATAR = configs.AVATAR;\r\nexport const NICKNAME = configs.NICKNAME;\r\nexport const BIO = configs.BIO;\r\nexport const ARCHIVES_TITLE = configs.ARCHIVES_TITLE;\r\nexport const LABELS_TITLE = configs.LABELS_TITLE;\r\nexport const SOCIALS_LIST = configs.SOCIALS_LIST;\r\nexport const DATE_FORMAT = configs.DATE_FORMAT;\r\nexport const EMPTY_MESSAGE = configs.EMPTY_MESSAGE;\r\nexport const ERROR_TITLE = configs.ERROR_TITLE;\r\nexport const ERROR_MESSAGE = configs.ERROR_MESSAGE;\r\nexport const ERROR_NAV = configs.ERROR_NAV;\r\nexport default configs;","export default (customConfigs: ICustomConfigs) => {\r\n  const configs = Object.assign({}, customConfigs);\r\n  configs.REPO = !!customConfigs.REPO\r\n    ? customConfigs.REPO\r\n    : configs.USERNAME + \".github.io\";\r\n  configs.AVATAR = !!customConfigs.AVATAR ? customConfigs.AVATAR : \"\";\r\n  configs.NICKNAME = !!customConfigs.NICKNAME\r\n    ? customConfigs.NICKNAME\r\n    : configs.USERNAME;\r\n  configs.BIO = !!customConfigs.BIO ? customConfigs.BIO : \"\";\r\n  configs.ARCHIVES_TITLE = !!customConfigs.ARCHIVES_TITLE\r\n    ? customConfigs.ARCHIVES_TITLE\r\n    : \"Archives\";\r\n  configs.LABELS_TITLE = !!customConfigs.LABELS_TITLE\r\n    ? customConfigs.LABELS_TITLE\r\n    : \"Labels\";\r\n  configs.SOCIALS_LIST =\r\n    !!configs.SOCIALS_LIST &&\r\n    Object.keys(customConfigs.SOCIALS_LIST as ISocialsList).length > 0\r\n      ? customConfigs.SOCIALS_LIST\r\n      : {};\r\n  configs.DATE_FORMAT = !!customConfigs.DATE_FORMAT\r\n    ? customConfigs.DATE_FORMAT\r\n    : \"MMMM DD, YYYY\";\r\n  configs.EMPTY_MESSAGE = !!customConfigs.EMPTY_MESSAGE\r\n    ? customConfigs.EMPTY_MESSAGE\r\n    : \"Today is $_DATETIME_. It's empty here. 😴\";\r\n  configs.ERROR_TITLE = !!customConfigs.ERROR_TITLE\r\n    ? customConfigs.ERROR_TITLE\r\n    : \"Error\";\r\n  configs.ERROR_MESSAGE = !!customConfigs.ERROR_MESSAGE\r\n    ? customConfigs.ERROR_MESSAGE\r\n    : \"Sorry, the page you are looking for could not be found.\";\r\n  configs.ERROR_NAV = !!customConfigs.ERROR_NAV\r\n    ? customConfigs.ERROR_NAV\r\n    : \"Back\";\r\n  return configs;\r\n};\r\n","import Styled from \"styled-components\";\r\n\r\nconst PageContainer = Styled.div`\r\n  padding: 75px 150px 25px;\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 25px 15px;\r\n  }\r\n`;\r\n\r\nexport default PageContainer;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { BLOG_TITLE } from \"configs\";\r\n\r\ninterface IProps {\r\n  children?: string | React.ReactElement;\r\n}\r\n\r\nexport default (props: IProps) => {\r\n  const { children } = props;\r\n  const title =\r\n    typeof children === \"string\"\r\n      ? children\r\n      : typeof children === \"object\" &&\r\n        children.type !== null &&\r\n        typeof children.props.children === \"string\"\r\n      ? children.props.children\r\n      : \"\";\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {!!title ? `${title} - ` : \"\"}\r\n          {BLOG_TITLE}\r\n        </title>\r\n      </Helmet>\r\n      {typeof children === \"object\" ? children : \"\"}\r\n    </>\r\n  );\r\n};\r\n","import Axios from \"axios\";\r\nimport { GITHUB_API_URL } from \"./config\";\r\n\r\nexport default (options: object) => Axios.create({\r\n  baseURL: GITHUB_API_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    Accept: \"application/vnd.github.v3+json\"\r\n  }\r\n})(options);","export const GITHUB_API_URL: string = \"https://api.github.com\";\r\n","import Fetch from \"./fetch\";\r\nimport { USERNAME, REPO } from \"configs\";\r\n\r\nexport const getOwnUserInfo = async () =>\r\n  await Fetch({\r\n    url: `/users/${USERNAME}`,\r\n    method: \"GET\"\r\n  })\r\n    .then(res => res.data)\r\n    .catch(err => err);\r\n\r\nexport const getArchives = async () =>\r\n  await Fetch({\r\n    url: `/repos/${USERNAME}/${\r\n      !!REPO && typeof REPO === \"string\" && REPO !== \"\"\r\n        ? REPO\r\n        : USERNAME + \".github.io\"\r\n    }/issues`,\r\n    method: \"GET\"\r\n  })\r\n    .then(res => res.data)\r\n    .catch(err => err);\r\n\r\nexport const getPost = async (number: number | string) =>\r\n  await Fetch({\r\n    url: `/repos/${USERNAME}/${\r\n      !!REPO && typeof REPO === \"string\" ? REPO : USERNAME + \".github.io\"\r\n    }/issues/${number}`,\r\n    method: \"GET\"\r\n  })\r\n    .then(res => res.data)\r\n    .catch(err => err);\r\n\r\nexport const markdownParser = async (text: string) =>\r\n  await Fetch({\r\n    url: `/markdown`,\r\n    method: \"POST\",\r\n    data: {\r\n      text,\r\n      mode: \"gfm\",\r\n      context: \"github/gollum\"\r\n    }\r\n  })\r\n    .then(res => res.data)\r\n    .catch(err => err);\r\n"],"sourceRoot":""}