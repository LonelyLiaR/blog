{"version":3,"sources":["store/reducers.js","store/actions.js","store/index.js","components/common/AsyncComponent.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["$_NO_LABEL_","Symbol","combineReducers","ownUserInfo","state","arguments","length","undefined","avatar_url","nickname","desc","action","type","Object","assign","info","postsStore","posts","number","$body","body","labelsStore","labels","values","i","ls","l","name","push","createStore","Reducers","common_AsyncComponent","importComponent","_Component","AsyncComponent","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","component","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","wrap","_context","prev","next","sent","default","setState","stop","C","react_default","createElement","props","Component","HomePage","Promise","all","__webpack_require__","e","then","bind","ArchivesPage","LabelsPage","LabelPage","PostPage","ErrorPage","Switch","Route","exact","path","Redirect","from","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","GlobalStyle","createGlobalStyle","_templateObject","render","react","HashRouter","es","store","Store","App_default","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3b8ca200.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { STORE_INFO, STORE_POSTS, MARK_POST } from \"./actions\";\r\n\r\nconst $_NO_LABEL_ = Symbol(\"$_NO_LABEL_\");\r\n\r\nconst ownUserInfo = (\r\n  state = { avatar_url: \"\", nickname: \"\", desc: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case STORE_INFO:\r\n      return Object.assign({}, state, action.info);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst postsStore = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STORE_POSTS:\r\n      return Object.assign({}, state, action.posts);\r\n    case MARK_POST:\r\n      state[action.number].$body = action.body;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst labelsStore = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STORE_POSTS:\r\n      const labels = Object.assign({}, state);\r\n      labels[$_NO_LABEL_] = [];\r\n      const posts = Object.values(action.posts);\r\n      for (let i = 0; i < posts.length; i++) {\r\n        const ls = posts[i].labels;\r\n        if (!!ls.length) {\r\n          for (let l = 0; l < ls.length; l++) {\r\n            if (typeof labels[ls[l].name] === \"undefined\") {\r\n              labels[ls[l].name] = [];\r\n            }\r\n            labels[ls[l].name].push(posts[i]);\r\n          }\r\n        } else {\r\n          labels[$_NO_LABEL_].push(posts[i]);\r\n        }\r\n      }\r\n      return labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  ownUserInfo,\r\n  postsStore,\r\n  labelsStore\r\n});\r\n","export const STORE_INFO = \"store-info\";\r\nexport const STORE_POSTS = \"store-posts\";\r\nexport const MARK_POST = \"mark-post\";","import {createStore} from 'redux';\r\nimport Reducers from './reducers';\r\n\r\nexport default createStore(Reducers);","// Reference https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default importComponent =>\r\n  class AsyncComponent extends Component {\r\n    state = {\r\n      component: null\r\n    };\r\n    async componentDidMount() {\r\n      const { default: component } = await importComponent();\r\n      this.setState({ component });\r\n    }\r\n    render() {\r\n      const C = this.state.component;\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  };\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport AsyncComponent from \"components/common/AsyncComponent\";\r\n\r\nconst HomePage = AsyncComponent(() => import(\"./components/HomePage\"));\r\nconst ArchivesPage = AsyncComponent(() => import(\"./components/ArchivesPage\"));\r\nconst LabelsPage = AsyncComponent(() => import(\"./components/LabelsPage\"));\r\nconst LabelPage = AsyncComponent(() => import(\"./components/LabelPage\"));\r\nconst PostPage = AsyncComponent(() => import(\"./components/PostPage\"));\r\nconst ErrorPage = AsyncComponent(() => import(\"./components/ErrorPage\"));\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/archives\" component={ArchivesPage} />\r\n        <Route exact path=\"/labels\" component={LabelsPage} />\r\n        <Route exact path=\"/label/:labelName\" component={LabelPage} />\r\n        <Route exact path=\"/p/:number\" component={PostPage} />\r\n        <Route exact path=\"/error\" component={ErrorPage} />\r\n        <Redirect from=\"/*\" to=\"/error\" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport Store from \"./store\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    outline: none;\r\n  }\r\n\r\n  html,\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n    position: relative;\r\n  }\r\n\r\n  body {\r\n    font-family: PingFang SC, Microsoft Jhenghei, Microsoft YaHei, sans-serif;\r\n    line-height: 1.5;\r\n    color: #333333;\r\n    -webkit-text-size-adjust: none;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  a {\r\n    color: #2DB4D8;\r\n    text-decoration: none;\r\n    transition: color .3s;\r\n  }\r\n\r\n  a:hover {\r\n    color: #22BAD9;\r\n  }\r\n\r\n  #app {\r\n    height: 100%;\r\n    position: relative;\r\n  }\r\n\r\n  .markdown-body {\r\n    font-size: 15px;\r\n    color: #333333;\r\n    line-height: 1.75;\r\n    letter-spacing: 0.1px;\r\n\r\n    h1, h2 {\r\n      font-weight: 500;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, strong {\r\n      color: #24292e;\r\n    }\r\n  }\r\n`;\r\n\r\nrender(\r\n  <Fragment>\r\n    <HashRouter>\r\n      <Provider store={Store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n    <GlobalStyle />\r\n  </Fragment>,\r\n  document.getElementById(\"app\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}