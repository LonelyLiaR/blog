{"version":3,"sources":["../../ts-app/src/store/reducers/ownUserInfo.ts","../../ts-app/src/store/reducers/postsStore.ts","../../ts-app/src/store/reducers/labelsStore.ts","../../ts-app/src/store/reducers/index.ts","../../ts-app/src/store/index.ts","../../ts-app/src/App.tsx","../../ts-app/src/serviceWorker.ts","../../ts-app/src/index.tsx","../../ts-app/src/store/actions.ts"],"names":["ownUserInfo","state","arguments","length","undefined","avatar_url","nickname","desc","action","type","STORE_INFO","Object","assign","info","postsStore","STORE_POSTS","posts","MARK_POST","number","$body","body","asd","labels","$_NO_LABEL_","values","i","ls","l","name","push","combineReducers","labelsStore","createStore","Reducers","HomePage","React","lazy","Promise","all","__webpack_require__","e","then","bind","ArchivesPage","LabelsPage","LabelPage","PostPage","ErrorPage","react_default","a","createElement","HashRouter","es","store","$tore","Suspense","fallback","Switch","Route","exact","path","component","props","Redirect","from","to","PureComponent","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","_templateObject","render","Fragment","App_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","Symbol"],"mappings":"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","file":"static/js/main.4f2b70bd.chunk.js","sourcesContent":["import { STORE_INFO } from \"store/actions\";\r\nimport { OwnUserInfo } from \"types/reducers\";\r\n\r\nconst ownUserInfo = (\r\n  state: OwnUserInfo.IState = { avatar_url: \"\", nickname: \"\", desc: \"\" },\r\n  action: OwnUserInfo.IAction\r\n) => {\r\n  switch (action.type) {\r\n    case STORE_INFO:\r\n      return Object.assign({}, state, action.info);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ownUserInfo;\r\n","import { STORE_POSTS, MARK_POST } from \"store/actions\";\r\nimport { PostsStore } from \"types/reducers\";\r\n\r\nconst postsStore = (state: PostsStore.IState = {} as PostsStore.IState, action: PostsStore.IAction) => {\r\n  switch (action.type) {\r\n    case STORE_POSTS:\r\n      return Object.assign({}, state, action.posts);\r\n    case MARK_POST:\r\n      state[action.number].$body = action.body;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsStore;\r\n","import { STORE_POSTS, $_NO_LABEL_ } from \"store/actions\";\r\nimport { LabelsStore } from \"types/reducers\";\r\n\r\nconst asd = (\r\n  state: LabelsStore.IState = {} as LabelsStore.IState,\r\n  action: LabelsStore.IAction\r\n) => {\r\n  switch (action.type) {\r\n    case STORE_POSTS:\r\n      const labels = Object.assign({}, state);\r\n      labels[$_NO_LABEL_] = [];\r\n      const posts = Object.values(action.posts);\r\n      for (let i = 0; i < posts.length; i++) {\r\n        const ls = posts[i].labels;\r\n        if (!!ls.length) {\r\n          for (let l = 0; l < ls.length; l++) {\r\n            const { name } = ls[l];\r\n            if (typeof labels[name] === \"undefined\") {\r\n              labels[name] = [];\r\n            }\r\n            labels[name].push(posts[i]);\r\n          }\r\n        } else {\r\n          labels[$_NO_LABEL_].push(posts[i]);\r\n        }\r\n      }\r\n      return labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default asd;\r\n","import { combineReducers } from \"redux\";\r\nimport ownUserInfo from './ownUserInfo';\r\nimport postsStore from './postsStore';\r\nimport labelsStore from './labelsStore';\r\n\r\nexport default combineReducers({\r\n  ownUserInfo,\r\n  postsStore,\r\n  labelsStore\r\n});\r\n","import { createStore } from \"redux\";\r\nimport Reducers from \"./reducers\";\r\n\r\nexport default createStore(Reducers);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport {\r\n  RouteComponentProps,\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport $tore from \"store/index\";\r\n\r\nconst HomePage = React.lazy(() => import(\"components/HomePage\"));\r\nconst ArchivesPage = React.lazy(() => import(\"components/ArchivesPage\"));\r\nconst LabelsPage = React.lazy(() => import(\"components/LabelsPage\"));\r\nconst LabelPage = React.lazy(() => import(\"components/LabelPage\"));\r\nconst PostPage = React.lazy(() => import(\"components/PostPage\"));\r\nconst ErrorPage = React.lazy(() => import(\"components/ErrorPage\"));\r\n\r\ninterface IRouteComponentProps<T> extends RouteComponentProps<T> {\r\n  [propName: string]: any;\r\n}\r\n\r\nexport default class extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Provider store={$tore}>\r\n          <React.Suspense fallback={\"\"}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={() => <HomePage />} />\r\n              <Route path=\"/archives\" component={() => <ArchivesPage />} />\r\n              <Route path=\"/labels\" component={() => <LabelsPage />} />\r\n              <Route\r\n                path=\"/label/:labelName\"\r\n                component={(\r\n                  props: IRouteComponentProps<{ labelName: string }>\r\n                ) => <LabelPage {...props} />}\r\n              />\r\n              <Route\r\n                path=\"/p/:number\"\r\n                component={(\r\n                  props: IRouteComponentProps<{ number: string }>\r\n                ) => <PostPage {...props} />}\r\n              />\r\n              <Route path=\"/error\" component={() => <ErrorPage />} />\r\n              <Redirect from=\"/*\" to=\"/error\" />\r\n            </Switch>\r\n          </React.Suspense>\r\n        </Provider>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    outline: none;\n  }\n\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    position: relative;\n  }\n\n  body {\n    font-family: PingFang SC, Microsoft Jhenghei, Microsoft YaHei, sans-serif;\n    line-height: 1.5;\n    color: #333333;\n    -webkit-text-size-adjust: none;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    overflow-x: hidden;\n  }\n\n  a {\n    color: #2DB4D8;\n    text-decoration: none;\n    transition: color .3s;\n  }\n\n  a:hover {\n    color: #22BAD9;\n  }\n\n  #app {\n    height: 100%;\n    position: relative;\n  }\n\n  .markdown-body {\n    font-size: 15px;\n    color: #333333;\n    line-height: 1.75;\n    letter-spacing: 0.1px;\n\n    h1, h2 {\n      font-weight: 500;\n    }\n\n    h1, h2, h3, h4, h5, h6, strong {\n      color: #24292e;\n    }\n  }\n`;\n\nrender(\n  <>\n    <App />\n    <GlobalStyle />\n  </>,\n  document.getElementById(\"app\")\n);\n\nserviceWorker.unregister();\n","export const STORE_INFO: string = \"store-info\";\r\nexport const STORE_POSTS: string = \"store-posts\";\r\nexport const MARK_POST: string = \"mark-post\";\r\nexport const $_NO_LABEL_: unique symbol = Symbol(\"$_NO_LABEL_\");"],"sourceRoot":""}